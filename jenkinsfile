pipeline {
    agent any

    environment {
        SONARQUBE_SERVER = 'sonarserver' // Jenkins SonarQube configuration
        NEXUS_URL = 'http://13.127.16.150:8086' // Nexus URL updated to http://13.127.16.150:8086
        DOCKER_IMAGE = 'vishnusoman85/react-app' // Docker image name
        DOCKER_TAG = "1.0.${BUILD_NUMBER}" // Docker image tag
        JAVA_HOME = '/usr/lib/jvm/java-17-openjdk-amd64' // Java 17 Home directory
        PATH = "${env.JAVA_HOME}/bin:${env.PATH}" // Add Java to PATH
        SONAR_SCANNER_HOME = '/opt/sonar-scanner/bin' // Sonar Scanner home
    }

    stages {
        stage('Code Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Beerus-cmd/payment_application.git'
            }
        }

        stage('Code Quality Check') {
            steps {
                withSonarQubeEnv("${SONARQUBE_SERVER}") {
                    sh """
                        npx sonar-scanner -Dsonar.projectKey=payment-app -Dsonar.sources=./
                    """
                }
            }
        }

        stage('Frontend Build') {
            steps {
                dir('micro-services/frontend') {
                    sh """
                        npm install && npm run build --prod
                    """
                }
            }
        }

        stage('Backend Build') {
            steps {
                dir('micro-services/backend/payment_service') {
                    sh 'python3 -m pip install --break-system-packages -r requirements.txt'
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                sh 'docker build -t payment-app-frontend:latest ./micro-services/frontend'
                sh 'docker build -t payment-app-backend:latest ./micro-services/backend/payment_service'
            }
        }

        stage('Push to Nexus') {
            steps {
                script {
                    // Login to Docker registry
                    withCredentials([usernamePassword(credentialsId: 'docker_registry_creds', 
                                                     usernameVariable: 'REGISTRY_USER', 
                                                     passwordVariable: 'REGISTRY_PASS')]) {
                        sh '''
                            echo $REGISTRY_PASS | docker login -u $REGISTRY_USER --password-stdin http://13.127.16.150:8086
                        '''

                        // Tag and push frontend Docker image
                        sh '''
                            docker tag payment-app-frontend:latest 13.127.16.150:8086/repository/docker/payment-app-frontend:latest
                            docker push 13.127.16.150:8086/repository/docker/payment-app-frontend:latest
                        '''

                        // Tag and push backend Docker image
                        sh '''
                            docker tag payment-app-backend:latest http://13.127.16.150:8086/repository/docker/payment-app-backend:latest
                            docker push 13.127.16.150:8086/repository/docker/payment-app-backend:latest
                        '''

                        // Logout from Docker registry
                        sh 'docker logout 13.127.16.150:8086'
                    }
                }
            }
        }
    }
}

